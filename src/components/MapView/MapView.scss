@import "styles/colors.scss";
@import "styles/fonts.scss";
@import "styles/index.scss";

.pending-map-container {
  position: absolute;
  height: 100vh;
  width: 100%;
  top: 0;
  background-color: #0000003d;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.map-container {
  position: absolute;
  height: 100vh;
  width: 100%;
  top: 0;
}

.map-container.background {
  z-index: -10000;
  // pointer-events: none;
  opacity: 0.15;
  position: fixed;
}

.cluster-marker,
.point-marker {
  color: $off-white;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;

  position: absolute;
  top: 50%;
  right: 50%;
  transform: translate(50%, -50%);

  transition-duration: $transition-duration;
}

.cluster-marker:hover,
.point-marker:hover,
.cluster-marker:focus,
.point-marker:focus {
  cursor: pointer;
  box-shadow: 0 0 1rem $white;
  z-index: 100000 !important;
  opacity: 1 !important;
  transform: scale(1.2) translate(42%, -42%);
}

.cluster-marker {
  background-color: $hope-blue;
  font-family: $font-stack;
  font-size: 18pt;
}

.point-marker {
  background-color: $lake-mi-blue;
  font-size: 14pt;
}

.map-popover {
  max-width: unset !important;
  > .popover-body {
    max-height: 16rem;
    overflow: auto;
  }
}

.alum-popover-item {
  width: 30rem;
}

.job-popover-item {
  width: 36rem;
}

#mapDiv {
  position: absolute;
}

#tagline,
.map-container a {
  pointer-events: none !important;
}

#tagline {
  margin-left: 3rem;
  margin-top: 2rem;
  width: 24rem !important;
  position: fixed;
  z-index: 100;
}

// My team is creating a web app for which we need to have Google Maps show on a huge touchscreen display for our client.
// We have concerns about the Google watermark and Terms of Service links on the bottom of the page on either side,
// as we don't want users to accidentally or on-purpose open those links and be directed away from our app,
// but we think the watermark should at least be visible. Is there a way to disable the links or something similar to
// prevent that?
// I guess it's this or lay something over it which will block pointer events, but that seems a little more messy.
